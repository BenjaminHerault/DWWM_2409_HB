public class Bouteille
    {
        //attributs
        private float contenanceEnLitre;
        private float contenuEnLitre;
        private bool estOuverte;

        //constructeurs

        //constructeur par defaut
        public Bouteille()
        {
            this.contenanceEnLitre = 1;
            this.contenuEnLitre = 1;
            this.estOuverte = false;
        }

        //constructeur classique
        public Bouteille(float contenanceEnLitre,
                         float contenuEnLitre,
                         bool estOuverte)
        {
            this.contenanceEnLitre = contenanceEnLitre;
            this.contenuEnLitre = contenuEnLitre;
            this.estOuverte = estOuverte;
        }

        //constructeur hybride classique defaut
        public Bouteille(float contenanceEnLitre,
                 float contenuEnLitre)
            :this(contenanceEnLitre, contenuEnLitre,false)
        {
        }

        //constructeur par clonage
        public Bouteille(Bouteille bouteilleACopier)
        {
            this.contenanceEnLitre = bouteilleACopier.contenanceEnLitre;
            this.contenuEnLitre = bouteilleACopier.contenuEnLitre;
            this.estOuverte = bouteilleACopier.estOuverte;
        }
    }

Pour arrondire 
double d1 = 1.5;
            double d2 = 1.3;
            double dresult = Math.Round(d1 - d2,15);

            double r = 4d / 3;

            //double d = Math.Round(d1 - d2,15);
            // https://learn.microsoft.com/en-us/dotnet/fundamentals/runtime-libraries/system-midpointrounding













using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
 
namespace ClassLibraryBouteille
{
    public class Bouteille
    {
        //attributs
        private float contenanceEnLitre;
        private float contenuEnLitre;
        private bool estOuverte;
 
        //constructeurs
 
        //constructeur par defaut
        public Bouteille()
            :this(1f,1f,false)
        {
        }
 
        //constructeur classique
        public Bouteille(float contenanceEnLitre,
                         float contenuEnLitre,
                         bool estOuverte)
        {
            this.contenanceEnLitre = contenanceEnLitre;
            this.contenuEnLitre = contenuEnLitre;
            this.estOuverte = estOuverte;
        }
 
        //constructeur hybride classique defaut
        public Bouteille(float contenanceEnLitre)
        :this(contenanceEnLitre, contenanceEnLitre,false)
        {
        }
 
        //constructeur par clonage
        //public Bouteille(Bouteille bouteilleACopier)
        //{
        //    this.contenanceEnLitre = bouteilleACopier.contenanceEnLitre;
        //    this.contenuEnLitre = bouteilleACopier.contenuEnLitre;
        //    this.estOuverte = bouteilleACopier.estOuverte;
        //}
 
        public Bouteille(Bouteille bouteilleACopier)
        :this(bouteilleACopier.contenanceEnLitre,bouteilleACopier.contenuEnLitre,bouteilleACopier.estOuverte)
        {
        }
 
 
 
    }
}
